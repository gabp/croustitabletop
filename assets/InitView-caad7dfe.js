import{_ as Se,o as x,c as N,n as Ye,a as tt,d as K,i as I,r as m,h as D,b as ne,e as nt,f as ot,g as rt,j as we,w as be,k as Oe,p as $,l as Ue,m as Le,q as re,s as st,F as it,t as oe,u as at,v as ct,x as Be,y as ve}from"./index-5897962d.js";const lt={name:"Preloader",props:{color:{type:String,default:"#41b883"},scale:{type:Number,default:1}},computed:{cssVars(){return{"--color":this.color,"--scale":this.scale}}}},ht=tt('<span class="rot-1" data-v-48cb797b></span><span class="rot-2" data-v-48cb797b></span><span class="rot-3" data-v-48cb797b></span><span class="rot-4" data-v-48cb797b></span><span class="rot-5" data-v-48cb797b></span><span class="rot-6" data-v-48cb797b></span><span class="rot-7" data-v-48cb797b></span><span class="rot-8" data-v-48cb797b></span>',8),ut=[ht];function dt(o,e,t,n,r,s){return x(),N("div",{class:"preloader",style:Ye(s.cssVars)},ut,4)}const gt=Se(lt,[["render",dt],["__scopeId","data-v-48cb797b"]]);/**
 * Vue 3 Carousel 0.2.13
 * (c) 2023
 * @license MIT
 */const k={itemsToShow:1,itemsToScroll:1,modelValue:0,transition:300,autoplay:0,snapAlign:"center",wrapAround:!1,throttle:16,pauseAutoplayOnHover:!1,mouseDrag:!0,touchDrag:!0,dir:"ltr",breakpoints:void 0},Fe={itemsToShow:{default:k.itemsToShow,type:Number},itemsToScroll:{default:k.itemsToScroll,type:Number},wrapAround:{default:k.wrapAround,type:Boolean},throttle:{default:k.throttle,type:Number},snapAlign:{default:k.snapAlign,validator(o){return["start","end","center","center-even","center-odd"].includes(o)}},transition:{default:k.transition,type:Number},breakpoints:{default:k.breakpoints,type:Object},autoplay:{default:k.autoplay,type:Number},pauseAutoplayOnHover:{default:k.pauseAutoplayOnHover,type:Boolean},modelValue:{default:void 0,type:Number},mouseDrag:{default:k.mouseDrag,type:Boolean},touchDrag:{default:k.touchDrag,type:Boolean},dir:{default:k.dir,validator(o){return["rtl","ltr"].includes(o)}},settings:{default(){return{}},type:Object}};function pt({config:o,slidesCount:e}){const{snapAlign:t,wrapAround:n,itemsToShow:r=1}=o;if(n)return Math.max(e-1,0);let s;switch(t){case"start":s=e-r;break;case"end":s=e-1;break;case"center":case"center-odd":s=e-Math.ceil((r-.5)/2);break;case"center-even":s=e-Math.ceil(r/2);break;default:s=0;break}return Math.max(s,0)}function _t({config:o,slidesCount:e}){const{wrapAround:t,snapAlign:n,itemsToShow:r=1}=o;let s=0;if(t||r>e)return s;switch(n){case"start":s=0;break;case"end":s=r-1;break;case"center":case"center-odd":s=Math.floor((r-1)/2);break;case"center-even":s=Math.floor((r-2)/2);break;default:s=0;break}return s}function ye({val:o,max:e,min:t}){return e<t?o:Math.min(Math.max(o,t),e)}function ft({config:o,currentSlide:e,slidesCount:t}){const{snapAlign:n,wrapAround:r,itemsToShow:s=1}=o;let i=e;switch(n){case"center":case"center-odd":i-=(s-1)/2;break;case"center-even":i-=(s-2)/2;break;case"end":i-=s-1;break}return r?i:ye({val:i,max:t-s,min:0})}function mt(o){var e,t,n,r;return o?((e=o[0])===null||e===void 0?void 0:e.children)==="v-if"||((n=(t=o[0])===null||t===void 0?void 0:t.type)===null||n===void 0?void 0:n.name)==="CarouselSlide"?o.filter(s=>{var i;return((i=s.type)===null||i===void 0?void 0:i.name)==="CarouselSlide"}):((r=o[0])===null||r===void 0?void 0:r.children)||[]:[]}function se({val:o,max:e,min:t=0}){return o>e?se({val:o-(e+1),max:e,min:t}):o<t?se({val:o+(e+1),max:e,min:t}):o}function bt(o,e){let t;return e?function(...n){const r=this;t||(o.apply(r,n),t=!0,setTimeout(()=>t=!1,e))}:o}function wt(o,e){let t;return function(...n){t&&clearTimeout(t),t=setTimeout(()=>{o(...n),t=null},e)}}var vt=K({name:"ARIA",setup(){const o=I("currentSlide",m(0)),e=I("slidesCount",m(0));return()=>D("div",{class:["carousel__liveregion","carousel__sr-only"],"aria-live":"polite","aria-atomic":"true"},`Item ${o.value+1} of ${e.value}`)}}),yt=K({name:"Carousel",props:Fe,setup(o,{slots:e,emit:t,expose:n}){var r;const s=m(null),i=m([]),l=m(0),c=m(0);let h=m({}),d=Object.assign({},k);const g=ne(Object.assign({},d)),p=m((r=o.modelValue)!==null&&r!==void 0?r:0),B=m(0),Te=m(0),W=m(0),F=m(0);let j,ce;$("config",g),$("slidesCount",c),$("currentSlide",p),$("maxSlide",W),$("minSlide",F),$("slideWidth",l);function le(){const u=Object.assign(Object.assign({},o),o.settings);h=m(Object.assign({},u.breakpoints)),d=Object.assign(Object.assign({},u),{settings:void 0,breakpoints:void 0}),Ie(d)}function G(){const u=Object.keys(h.value).map(b=>Number(b)).sort((b,H)=>+H-+b);let S=Object.assign({},d);u.some(b=>window.matchMedia(`(min-width: ${b}px)`).matches?(S=Object.assign(Object.assign({},S),h.value[b]),!0):!1),Ie(S)}function Ie(u){Object.entries(u).forEach(([S,b])=>g[S]=b)}const Pe=wt(()=>{Object.keys(h.value).length&&(G(),V()),Q()},16);function Q(){if(!s.value)return;const u=s.value.getBoundingClientRect();l.value=u.width/g.itemsToShow}function V(){c.value<=0||(Te.value=Math.ceil((c.value-1)/2),W.value=pt({config:g,slidesCount:c.value}),F.value=_t({config:g,slidesCount:c.value}),g.wrapAround||(p.value=ye({val:p.value,max:W.value,min:F.value})))}nt(()=>{Object.keys(h.value).length&&G(),ot(()=>{V(),Q(),t("init")}),Re(),window.addEventListener("resize",Pe,{passive:!0})}),rt(()=>{ce&&clearTimeout(ce),j&&clearInterval(j),window.removeEventListener("resize",Pe,{passive:!0})});let T=!1;const Z={x:0,y:0},q={x:0,y:0},R=ne({x:0,y:0}),he=m(!1),Ze=()=>{he.value=!0},qe=()=>{he.value=!1};function $e(u){["INPUT","TEXTAREA"].includes(u.target.tagName)||(u.preventDefault(),T=u.type==="touchstart",!(!T&&u.button!==0||O.value)&&(Z.x=T?u.touches[0].clientX:u.clientX,Z.y=T?u.touches[0].clientY:u.clientY,document.addEventListener(T?"touchmove":"mousemove",xe,!0),document.addEventListener(T?"touchend":"mouseup",De,!0)))}const xe=bt(u=>{q.x=T?u.touches[0].clientX:u.clientX,q.y=T?u.touches[0].clientY:u.clientY;const S=q.x-Z.x,b=q.y-Z.y;R.y=b,R.x=S},g.throttle);function De(){const u=g.dir==="rtl"?-1:1,S=Math.sign(R.x)*.4,b=Math.round(R.x/l.value+S)*u;if(b&&!T){const H=pe=>{pe.stopPropagation(),window.removeEventListener("click",H,!0)};window.addEventListener("click",H,!0)}A(p.value-b),R.x=0,R.y=0,document.removeEventListener(T?"touchmove":"mousemove",xe,!0),document.removeEventListener(T?"touchend":"mouseup",De,!0)}function Re(){!g.autoplay||g.autoplay<=0||(j=setInterval(()=>{g.pauseAutoplayOnHover&&he.value||ee()},g.autoplay))}function Ae(){j&&(clearInterval(j),j=null),Re()}const O=m(!1);function A(u){const S=g.wrapAround?u:ye({val:u,max:W.value,min:F.value});p.value===S||O.value||(t("slide-start",{slidingToIndex:u,currentSlideIndex:p.value,prevSlideIndex:B.value,slidesCount:c.value}),O.value=!0,B.value=p.value,p.value=S,ce=setTimeout(()=>{if(g.wrapAround){const b=se({val:S,max:W.value,min:0});b!==p.value&&(p.value=b,t("loop",{currentSlideIndex:p.value,slidingToIndex:u}))}t("update:modelValue",p.value),t("slide-end",{currentSlideIndex:p.value,prevSlideIndex:B.value,slidesCount:c.value}),O.value=!1,Ae()},g.transition))}function ee(){A(p.value+g.itemsToScroll)}function ue(){A(p.value-g.itemsToScroll)}const He={slideTo:A,next:ee,prev:ue};$("nav",He),$("isSliding",O);const Ne=we(()=>ft({config:g,currentSlide:p.value,slidesCount:c.value}));$("slidesToScroll",Ne);const et=we(()=>{const u=g.dir==="rtl"?-1:1,S=Ne.value*l.value*u;return{transform:`translateX(${R.x-S}px)`,transition:`${O.value?g.transition:0}ms`,margin:g.wrapAround?`0 -${c.value*l.value}px`:"",width:"100%"}});function Me(){le(),G(),V(),Q(),Ae()}Object.keys(Fe).forEach(u=>{["modelValue"].includes(u)||be(()=>o[u],Me)}),be(()=>o.modelValue,u=>{u!==p.value&&A(Number(u))}),be(c,V),le();const We={config:g,slidesCount:c,slideWidth:l,next:ee,prev:ue,slideTo:A,currentSlide:p,maxSlide:W,minSlide:F,middleSlide:Te};n({updateBreakpointsConfigs:G,updateSlidesData:V,updateSlideWidth:Q,initDefaultConfigs:le,restartCarousel:Me,slideTo:A,next:ee,prev:ue,nav:He,data:We});const de=e.default||e.slides,ge=e.addons,je=ne(We);return()=>{const u=mt(de==null?void 0:de(je)),S=(ge==null?void 0:ge(je))||[];u.forEach((_e,fe)=>_e.props.index=fe);let b=u;if(g.wrapAround){const _e=u.map((me,z)=>Oe(me,{index:-u.length+z,isClone:!0,key:`clone-before-${z}`})),fe=u.map((me,z)=>Oe(me,{index:u.length+z,isClone:!0,key:`clone-after-${z}`}));b=[..._e,...u,...fe]}i.value=u,c.value=Math.max(u.length,1);const H=D("ol",{class:"carousel__track",style:et.value,onMousedownCapture:g.mouseDrag?$e:null,onTouchstartCapture:g.touchDrag?$e:null},b),pe=D("div",{class:"carousel__viewport"},H);return D("section",{ref:s,class:{carousel:!0,"carousel--rtl":g.dir==="rtl"},dir:g.dir,"aria-label":"Gallery",tabindex:"0",onMouseenter:Ze,onMouseleave:qe},[pe,S,D(vt)])}}});const St=()=>{const o=I("maxSlide",m(1)),e=I("minSlide",m(1)),t=I("currentSlide",m(1)),n=I("nav",{}),r=i=>se({val:t.value,max:o.value,min:0})===i,s=[];for(let i=e.value;i<o.value+1;i++){const l=D("button",{type:"button",class:{"carousel__pagination-button":!0,"carousel__pagination-button--active":r(i)},"aria-label":`Navigate to slide ${i+1}`,onClick:()=>n.slideTo(i)}),c=D("li",{class:"carousel__pagination-item",key:i},l);s.push(c)}return D("ol",{class:"carousel__pagination"},s)};var Ct=K({name:"CarouselSlide",props:{index:{type:Number,default:1},isClone:{type:Boolean,default:!1}},setup(o,{slots:e}){const t=I("config",ne(Object.assign({},k))),n=I("currentSlide",m(0)),r=I("slidesToScroll",m(0)),s=I("slideWidth",m(0)),i=I("isSliding",m(!1)),l=we(()=>({width:s.value?`${s.value}px`:"100%"})),c=()=>o.index===n.value,h=()=>o.index===n.value-1,d=()=>o.index===n.value+1,g=()=>{const p=Math.floor(r.value),B=Math.ceil(r.value+t.itemsToShow-1);return o.index>=p&&o.index<=B};return()=>{var p;return D("li",{style:l.value,class:{carousel__slide:!0,"carousel_slide--clone":o.isClone,"carousel__slide--visible":g(),"carousel__slide--active":c(),"carousel__slide--prev":h(),"carousel__slide--next":d(),"carousel__slide--sliding":i.value},"aria-hidden":!g()},(p=e.default)===null||p===void 0?void 0:p.call(e))}}});const kt=K({name:"CardHand",components:{Carousel:yt,Slide:Ct,Pagination:St},props:["cards","playerHubConnection"],data:()=>({serverUrl:null,playerColor:null,currentSlide:0,activeSlide:null,settings:{itemsToShow:1,snapAlign:"start"},breakpoints:{500:{itemsToShow:4,snapAlign:"start"},1024:{itemsToShow:7,snapAlign:"start"}}}),methods:{isActive(o){return this.activeSlide==o},slideTo(o,e){this.currentSlide=o,o!=this.activeSlide?(this.activeSlide=o,this.toggleHighlight(e,!0)):(this.activeSlide=null,this.toggleHighlight(e,!1))},toggleHighlight(o,e){this.playerHubConnection.invoke("HighlightCard",o,e)}},mounted(){this.serverUrl=this.$route.query.serverUrl,this.playerColor=this.$route.query.playerColor}});function Et(o,e,t,n,r,s){const i=re("Slide"),l=re("Carousel");return x(),Ue(l,{class:"carousel_width",wrapAround:!1,mouseDrag:!0,touchDrag:!0,breakpoints:o.breakpoints,modelValue:o.currentSlide,"onUpdate:modelValue":e[0]||(e[0]=c=>o.currentSlide=c),ref:"carousel"},{default:Le(()=>[(x(!0),N(it,null,st(o.cards,(c,h)=>(x(),Ue(i,{key:c.guid,onPointerup:d=>o.slideTo(h,c.guid)},{default:Le(()=>[oe("div",{style:Ye(`background-image: url(${c.imageURL}); background-repeat: no-repeat; background-size: 173px 200px;`),class:at(["carousel__item",{selected_carousel_item:o.isActive(h)}])},null,6)]),_:2},1032,["onPointerup"]))),128))]),_:1},8,["breakpoints","modelValue"])}const Tt=Se(kt,[["render",Et],["__scopeId","data-v-27dc45c7"]]);class U extends Error{constructor(e,t){const n=new.target.prototype;super(`${e}: Status code '${t}'`),this.statusCode=t,this.__proto__=n}}class Ce extends Error{constructor(e="A timeout occurred."){const t=new.target.prototype;super(e),this.__proto__=t}}class P extends Error{constructor(e="An abort occurred."){const t=new.target.prototype;super(e),this.__proto__=t}}class It extends Error{constructor(e,t){const n=new.target.prototype;super(e),this.transport=t,this.errorType="UnsupportedTransportError",this.__proto__=n}}class Pt extends Error{constructor(e,t){const n=new.target.prototype;super(e),this.transport=t,this.errorType="DisabledTransportError",this.__proto__=n}}class $t extends Error{constructor(e,t){const n=new.target.prototype;super(e),this.transport=t,this.errorType="FailedToStartTransportError",this.__proto__=n}}class xt extends Error{constructor(e){const t=new.target.prototype;super(e),this.errorType="FailedToNegotiateWithServerError",this.__proto__=t}}class Dt extends Error{constructor(e,t){const n=new.target.prototype;super(e),this.innerErrors=t,this.__proto__=n}}class Ge{constructor(e,t,n){this.statusCode=e,this.statusText=t,this.content=n}}class ae{get(e,t){return this.send({...t,method:"GET",url:e})}post(e,t){return this.send({...t,method:"POST",url:e})}delete(e,t){return this.send({...t,method:"DELETE",url:e})}getCookieString(e){return""}}var a;(function(o){o[o.Trace=0]="Trace",o[o.Debug=1]="Debug",o[o.Information=2]="Information",o[o.Warning=3]="Warning",o[o.Error=4]="Error",o[o.Critical=5]="Critical",o[o.None=6]="None"})(a||(a={}));class X{constructor(){}log(e,t){}}X.instance=new X;const Rt="7.0.4";class y{static isRequired(e,t){if(e==null)throw new Error(`The '${t}' argument is required.`)}static isNotEmpty(e,t){if(!e||e.match(/^\s*$/))throw new Error(`The '${t}' argument should not be empty.`)}static isIn(e,t,n){if(!(e in t))throw new Error(`Unknown ${n} value: ${e}.`)}}class v{static get isBrowser(){return typeof window=="object"&&typeof window.document=="object"}static get isWebWorker(){return typeof self=="object"&&"importScripts"in self}static get isReactNative(){return typeof window=="object"&&typeof window.document>"u"}static get isNode(){return!this.isBrowser&&!this.isWebWorker&&!this.isReactNative}}function J(o,e){let t="";return Y(o)?(t=`Binary data of length ${o.byteLength}`,e&&(t+=`. Content: '${At(o)}'`)):typeof o=="string"&&(t=`String data of length ${o.length}`,e&&(t+=`. Content: '${o}'`)),t}function At(o){const e=new Uint8Array(o);let t="";return e.forEach(n=>{const r=n<16?"0":"";t+=`0x${r}${n.toString(16)} `}),t.substr(0,t.length-1)}function Y(o){return o&&typeof ArrayBuffer<"u"&&(o instanceof ArrayBuffer||o.constructor&&o.constructor.name==="ArrayBuffer")}async function Qe(o,e,t,n,r,s){const i={},[l,c]=L();i[l]=c,o.log(a.Trace,`(${e} transport) sending data. ${J(r,s.logMessageContent)}.`);const h=Y(r)?"arraybuffer":"text",d=await t.post(n,{content:r,headers:{...i,...s.headers},responseType:h,timeout:s.timeout,withCredentials:s.withCredentials});o.log(a.Trace,`(${e} transport) request complete. Response status: ${d.statusCode}.`)}function Ht(o){return o===void 0?new ie(a.Information):o===null?X.instance:o.log!==void 0?o:new ie(o)}class Nt{constructor(e,t){this._subject=e,this._observer=t}dispose(){const e=this._subject.observers.indexOf(this._observer);e>-1&&this._subject.observers.splice(e,1),this._subject.observers.length===0&&this._subject.cancelCallback&&this._subject.cancelCallback().catch(t=>{})}}class ie{constructor(e){this._minLevel=e,this.out=console}log(e,t){if(e>=this._minLevel){const n=`[${new Date().toISOString()}] ${a[e]}: ${t}`;switch(e){case a.Critical:case a.Error:this.out.error(n);break;case a.Warning:this.out.warn(n);break;case a.Information:this.out.info(n);break;default:this.out.log(n);break}}}}function L(){let o="X-SignalR-User-Agent";return v.isNode&&(o="User-Agent"),[o,Mt(Rt,Wt(),Ot(),jt())]}function Mt(o,e,t,n){let r="Microsoft SignalR/";const s=o.split(".");return r+=`${s[0]}.${s[1]}`,r+=` (${o}; `,e&&e!==""?r+=`${e}; `:r+="Unknown OS; ",r+=`${t}`,n?r+=`; ${n}`:r+="; Unknown Runtime Version",r+=")",r}function Wt(){if(v.isNode)switch(process.platform){case"win32":return"Windows NT";case"darwin":return"macOS";case"linux":return"Linux";default:return process.platform}else return""}function jt(){if(v.isNode)return process.versions.node}function Ot(){return v.isNode?"NodeJS":"Browser"}function Ve(o){return o.stack?o.stack:o.message?o.message:`${o}`}function Ut(){if(typeof globalThis<"u")return globalThis;if(typeof self<"u")return self;if(typeof window<"u")return window;if(typeof global<"u")return global;throw new Error("could not find global")}class Lt extends ae{constructor(e){if(super(),this._logger=e,typeof fetch>"u"){const t=typeof __webpack_require__=="function"?__non_webpack_require__:require;this._jar=new(t("tough-cookie")).CookieJar,this._fetchType=t("node-fetch"),this._fetchType=t("fetch-cookie")(this._fetchType,this._jar)}else this._fetchType=fetch.bind(Ut());if(typeof AbortController>"u"){const t=typeof __webpack_require__=="function"?__non_webpack_require__:require;this._abortControllerType=t("abort-controller")}else this._abortControllerType=AbortController}async send(e){if(e.abortSignal&&e.abortSignal.aborted)throw new P;if(!e.method)throw new Error("No method defined.");if(!e.url)throw new Error("No url defined.");const t=new this._abortControllerType;let n;e.abortSignal&&(e.abortSignal.onabort=()=>{t.abort(),n=new P});let r=null;if(e.timeout){const c=e.timeout;r=setTimeout(()=>{t.abort(),this._logger.log(a.Warning,"Timeout from HTTP request."),n=new Ce},c)}e.content===""&&(e.content=void 0),e.content&&(e.headers=e.headers||{},Y(e.content)?e.headers["Content-Type"]="application/octet-stream":e.headers["Content-Type"]="text/plain;charset=UTF-8");let s;try{s=await this._fetchType(e.url,{body:e.content,cache:"no-cache",credentials:e.withCredentials===!0?"include":"same-origin",headers:{"X-Requested-With":"XMLHttpRequest",...e.headers},method:e.method,mode:"cors",redirect:"follow",signal:t.signal})}catch(c){throw n||(this._logger.log(a.Warning,`Error from HTTP request. ${c}.`),c)}finally{r&&clearTimeout(r),e.abortSignal&&(e.abortSignal.onabort=null)}if(!s.ok){const c=await ze(s,"text");throw new U(c||s.statusText,s.status)}const l=await ze(s,e.responseType);return new Ge(s.status,s.statusText,l)}getCookieString(e){let t="";return v.isNode&&this._jar&&this._jar.getCookies(e,(n,r)=>t=r.join("; ")),t}}function ze(o,e){let t;switch(e){case"arraybuffer":t=o.arrayBuffer();break;case"text":t=o.text();break;case"blob":case"document":case"json":throw new Error(`${e} is not supported.`);default:t=o.text();break}return t}class Bt extends ae{constructor(e){super(),this._logger=e}send(e){return e.abortSignal&&e.abortSignal.aborted?Promise.reject(new P):e.method?e.url?new Promise((t,n)=>{const r=new XMLHttpRequest;r.open(e.method,e.url,!0),r.withCredentials=e.withCredentials===void 0?!0:e.withCredentials,r.setRequestHeader("X-Requested-With","XMLHttpRequest"),e.content===""&&(e.content=void 0),e.content&&(Y(e.content)?r.setRequestHeader("Content-Type","application/octet-stream"):r.setRequestHeader("Content-Type","text/plain;charset=UTF-8"));const s=e.headers;s&&Object.keys(s).forEach(i=>{r.setRequestHeader(i,s[i])}),e.responseType&&(r.responseType=e.responseType),e.abortSignal&&(e.abortSignal.onabort=()=>{r.abort(),n(new P)}),e.timeout&&(r.timeout=e.timeout),r.onload=()=>{e.abortSignal&&(e.abortSignal.onabort=null),r.status>=200&&r.status<300?t(new Ge(r.status,r.statusText,r.response||r.responseText)):n(new U(r.response||r.responseText||r.statusText,r.status))},r.onerror=()=>{this._logger.log(a.Warning,`Error from HTTP request. ${r.status}: ${r.statusText}.`),n(new U(r.statusText,r.status))},r.ontimeout=()=>{this._logger.log(a.Warning,"Timeout from HTTP request."),n(new Ce)},r.send(e.content)}):Promise.reject(new Error("No url defined.")):Promise.reject(new Error("No method defined."))}}class Ft extends ae{constructor(e){if(super(),typeof fetch<"u"||v.isNode)this._httpClient=new Lt(e);else if(typeof XMLHttpRequest<"u")this._httpClient=new Bt(e);else throw new Error("No usable HttpClient found.")}send(e){return e.abortSignal&&e.abortSignal.aborted?Promise.reject(new P):e.method?e.url?this._httpClient.send(e):Promise.reject(new Error("No url defined.")):Promise.reject(new Error("No method defined."))}getCookieString(e){return this._httpClient.getCookieString(e)}}class E{static write(e){return`${e}${E.RecordSeparator}`}static parse(e){if(e[e.length-1]!==E.RecordSeparator)throw new Error("Message is incomplete.");const t=e.split(E.RecordSeparator);return t.pop(),t}}E.RecordSeparatorCode=30;E.RecordSeparator=String.fromCharCode(E.RecordSeparatorCode);class Vt{writeHandshakeRequest(e){return E.write(JSON.stringify(e))}parseHandshakeResponse(e){let t,n;if(Y(e)){const l=new Uint8Array(e),c=l.indexOf(E.RecordSeparatorCode);if(c===-1)throw new Error("Message is incomplete.");const h=c+1;t=String.fromCharCode.apply(null,Array.prototype.slice.call(l.slice(0,h))),n=l.byteLength>h?l.slice(h).buffer:null}else{const l=e,c=l.indexOf(E.RecordSeparator);if(c===-1)throw new Error("Message is incomplete.");const h=c+1;t=l.substring(0,h),n=l.length>h?l.substring(h):null}const r=E.parse(t),s=JSON.parse(r[0]);if(s.type)throw new Error("Expected a handshake response from the server.");return[n,s]}}var _;(function(o){o[o.Invocation=1]="Invocation",o[o.StreamItem=2]="StreamItem",o[o.Completion=3]="Completion",o[o.StreamInvocation=4]="StreamInvocation",o[o.CancelInvocation=5]="CancelInvocation",o[o.Ping=6]="Ping",o[o.Close=7]="Close"})(_||(_={}));class zt{constructor(){this.observers=[]}next(e){for(const t of this.observers)t.next(e)}error(e){for(const t of this.observers)t.error&&t.error(e)}complete(){for(const e of this.observers)e.complete&&e.complete()}subscribe(e){return this.observers.push(e),new Nt(this,e)}}const Xt=30*1e3,Jt=15*1e3;var f;(function(o){o.Disconnected="Disconnected",o.Connecting="Connecting",o.Connected="Connected",o.Disconnecting="Disconnecting",o.Reconnecting="Reconnecting"})(f||(f={}));class ke{constructor(e,t,n,r){this._nextKeepAlive=0,this._freezeEventListener=()=>{this._logger.log(a.Warning,"The page is being frozen, this will likely lead to the connection being closed and messages being lost. For more information see the docs at https://docs.microsoft.com/aspnet/core/signalr/javascript-client#bsleep")},y.isRequired(e,"connection"),y.isRequired(t,"logger"),y.isRequired(n,"protocol"),this.serverTimeoutInMilliseconds=Xt,this.keepAliveIntervalInMilliseconds=Jt,this._logger=t,this._protocol=n,this.connection=e,this._reconnectPolicy=r,this._handshakeProtocol=new Vt,this.connection.onreceive=s=>this._processIncomingData(s),this.connection.onclose=s=>this._connectionClosed(s),this._callbacks={},this._methods={},this._closedCallbacks=[],this._reconnectingCallbacks=[],this._reconnectedCallbacks=[],this._invocationId=0,this._receivedHandshakeResponse=!1,this._connectionState=f.Disconnected,this._connectionStarted=!1,this._cachedPingMessage=this._protocol.writeMessage({type:_.Ping})}static create(e,t,n,r){return new ke(e,t,n,r)}get state(){return this._connectionState}get connectionId(){return this.connection&&this.connection.connectionId||null}get baseUrl(){return this.connection.baseUrl||""}set baseUrl(e){if(this._connectionState!==f.Disconnected&&this._connectionState!==f.Reconnecting)throw new Error("The HubConnection must be in the Disconnected or Reconnecting state to change the url.");if(!e)throw new Error("The HubConnection url must be a valid url.");this.connection.baseUrl=e}start(){return this._startPromise=this._startWithStateTransitions(),this._startPromise}async _startWithStateTransitions(){if(this._connectionState!==f.Disconnected)return Promise.reject(new Error("Cannot start a HubConnection that is not in the 'Disconnected' state."));this._connectionState=f.Connecting,this._logger.log(a.Debug,"Starting HubConnection.");try{await this._startInternal(),v.isBrowser&&window.document.addEventListener("freeze",this._freezeEventListener),this._connectionState=f.Connected,this._connectionStarted=!0,this._logger.log(a.Debug,"HubConnection connected successfully.")}catch(e){return this._connectionState=f.Disconnected,this._logger.log(a.Debug,`HubConnection failed to start successfully because of error '${e}'.`),Promise.reject(e)}}async _startInternal(){this._stopDuringStartError=void 0,this._receivedHandshakeResponse=!1;const e=new Promise((t,n)=>{this._handshakeResolver=t,this._handshakeRejecter=n});await this.connection.start(this._protocol.transferFormat);try{const t={protocol:this._protocol.name,version:this._protocol.version};if(this._logger.log(a.Debug,"Sending handshake request."),await this._sendMessage(this._handshakeProtocol.writeHandshakeRequest(t)),this._logger.log(a.Information,`Using HubProtocol '${this._protocol.name}'.`),this._cleanupTimeout(),this._resetTimeoutPeriod(),this._resetKeepAliveInterval(),await e,this._stopDuringStartError)throw this._stopDuringStartError;this.connection.features.inherentKeepAlive||await this._sendMessage(this._cachedPingMessage)}catch(t){throw this._logger.log(a.Debug,`Hub handshake failed with error '${t}' during start(). Stopping HubConnection.`),this._cleanupTimeout(),this._cleanupPingTimer(),await this.connection.stop(t),t}}async stop(){const e=this._startPromise;this._stopPromise=this._stopInternal(),await this._stopPromise;try{await e}catch{}}_stopInternal(e){return this._connectionState===f.Disconnected?(this._logger.log(a.Debug,`Call to HubConnection.stop(${e}) ignored because it is already in the disconnected state.`),Promise.resolve()):this._connectionState===f.Disconnecting?(this._logger.log(a.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnecting state.`),this._stopPromise):(this._connectionState=f.Disconnecting,this._logger.log(a.Debug,"Stopping HubConnection."),this._reconnectDelayHandle?(this._logger.log(a.Debug,"Connection stopped during reconnect delay. Done reconnecting."),clearTimeout(this._reconnectDelayHandle),this._reconnectDelayHandle=void 0,this._completeClose(),Promise.resolve()):(this._cleanupTimeout(),this._cleanupPingTimer(),this._stopDuringStartError=e||new P("The connection was stopped before the hub handshake could complete."),this.connection.stop(e)))}stream(e,...t){const[n,r]=this._replaceStreamingParams(t),s=this._createStreamInvocation(e,t,r);let i;const l=new zt;return l.cancelCallback=()=>{const c=this._createCancelInvocation(s.invocationId);return delete this._callbacks[s.invocationId],i.then(()=>this._sendWithProtocol(c))},this._callbacks[s.invocationId]=(c,h)=>{if(h){l.error(h);return}else c&&(c.type===_.Completion?c.error?l.error(new Error(c.error)):l.complete():l.next(c.item))},i=this._sendWithProtocol(s).catch(c=>{l.error(c),delete this._callbacks[s.invocationId]}),this._launchStreams(n,i),l}_sendMessage(e){return this._resetKeepAliveInterval(),this.connection.send(e)}_sendWithProtocol(e){return this._sendMessage(this._protocol.writeMessage(e))}send(e,...t){const[n,r]=this._replaceStreamingParams(t),s=this._sendWithProtocol(this._createInvocation(e,t,!0,r));return this._launchStreams(n,s),s}invoke(e,...t){const[n,r]=this._replaceStreamingParams(t),s=this._createInvocation(e,t,!1,r);return new Promise((l,c)=>{this._callbacks[s.invocationId]=(d,g)=>{if(g){c(g);return}else d&&(d.type===_.Completion?d.error?c(new Error(d.error)):l(d.result):c(new Error(`Unexpected message type: ${d.type}`)))};const h=this._sendWithProtocol(s).catch(d=>{c(d),delete this._callbacks[s.invocationId]});this._launchStreams(n,h)})}on(e,t){!e||!t||(e=e.toLowerCase(),this._methods[e]||(this._methods[e]=[]),this._methods[e].indexOf(t)===-1&&this._methods[e].push(t))}off(e,t){if(!e)return;e=e.toLowerCase();const n=this._methods[e];if(n)if(t){const r=n.indexOf(t);r!==-1&&(n.splice(r,1),n.length===0&&delete this._methods[e])}else delete this._methods[e]}onclose(e){e&&this._closedCallbacks.push(e)}onreconnecting(e){e&&this._reconnectingCallbacks.push(e)}onreconnected(e){e&&this._reconnectedCallbacks.push(e)}_processIncomingData(e){if(this._cleanupTimeout(),this._receivedHandshakeResponse||(e=this._processHandshakeResponse(e),this._receivedHandshakeResponse=!0),e){const t=this._protocol.parseMessages(e,this._logger);for(const n of t)switch(n.type){case _.Invocation:this._invokeClientMethod(n);break;case _.StreamItem:case _.Completion:{const r=this._callbacks[n.invocationId];if(r){n.type===_.Completion&&delete this._callbacks[n.invocationId];try{r(n)}catch(s){this._logger.log(a.Error,`Stream callback threw error: ${Ve(s)}`)}}break}case _.Ping:break;case _.Close:{this._logger.log(a.Information,"Close message received from server.");const r=n.error?new Error("Server returned an error on close: "+n.error):void 0;n.allowReconnect===!0?this.connection.stop(r):this._stopPromise=this._stopInternal(r);break}default:this._logger.log(a.Warning,`Invalid message type: ${n.type}.`);break}}this._resetTimeoutPeriod()}_processHandshakeResponse(e){let t,n;try{[n,t]=this._handshakeProtocol.parseHandshakeResponse(e)}catch(r){const s="Error parsing handshake response: "+r;this._logger.log(a.Error,s);const i=new Error(s);throw this._handshakeRejecter(i),i}if(t.error){const r="Server returned handshake error: "+t.error;this._logger.log(a.Error,r);const s=new Error(r);throw this._handshakeRejecter(s),s}else this._logger.log(a.Debug,"Server handshake complete.");return this._handshakeResolver(),n}_resetKeepAliveInterval(){this.connection.features.inherentKeepAlive||(this._nextKeepAlive=new Date().getTime()+this.keepAliveIntervalInMilliseconds,this._cleanupPingTimer())}_resetTimeoutPeriod(){if((!this.connection.features||!this.connection.features.inherentKeepAlive)&&(this._timeoutHandle=setTimeout(()=>this.serverTimeout(),this.serverTimeoutInMilliseconds),this._pingServerHandle===void 0)){let e=this._nextKeepAlive-new Date().getTime();e<0&&(e=0),this._pingServerHandle=setTimeout(async()=>{if(this._connectionState===f.Connected)try{await this._sendMessage(this._cachedPingMessage)}catch{this._cleanupPingTimer()}},e)}}serverTimeout(){this.connection.stop(new Error("Server timeout elapsed without receiving a message from the server."))}async _invokeClientMethod(e){const t=e.target.toLowerCase(),n=this._methods[t];if(!n){this._logger.log(a.Warning,`No client method with the name '${t}' found.`),e.invocationId&&(this._logger.log(a.Warning,`No result given for '${t}' method and invocation ID '${e.invocationId}'.`),await this._sendWithProtocol(this._createCompletionMessage(e.invocationId,"Client didn't provide a result.",null)));return}const r=n.slice(),s=!!e.invocationId;let i,l,c;for(const h of r)try{const d=i;i=await h.apply(this,e.arguments),s&&i&&d&&(this._logger.log(a.Error,`Multiple results provided for '${t}'. Sending error to server.`),c=this._createCompletionMessage(e.invocationId,"Client provided multiple results.",null)),l=void 0}catch(d){l=d,this._logger.log(a.Error,`A callback for the method '${t}' threw error '${d}'.`)}c?await this._sendWithProtocol(c):s?(l?c=this._createCompletionMessage(e.invocationId,`${l}`,null):i!==void 0?c=this._createCompletionMessage(e.invocationId,null,i):(this._logger.log(a.Warning,`No result given for '${t}' method and invocation ID '${e.invocationId}'.`),c=this._createCompletionMessage(e.invocationId,"Client didn't provide a result.",null)),await this._sendWithProtocol(c)):i&&this._logger.log(a.Error,`Result given for '${t}' method but server is not expecting a result.`)}_connectionClosed(e){this._logger.log(a.Debug,`HubConnection.connectionClosed(${e}) called while in state ${this._connectionState}.`),this._stopDuringStartError=this._stopDuringStartError||e||new P("The underlying connection was closed before the hub handshake could complete."),this._handshakeResolver&&this._handshakeResolver(),this._cancelCallbacksWithError(e||new Error("Invocation canceled due to the underlying connection being closed.")),this._cleanupTimeout(),this._cleanupPingTimer(),this._connectionState===f.Disconnecting?this._completeClose(e):this._connectionState===f.Connected&&this._reconnectPolicy?this._reconnect(e):this._connectionState===f.Connected&&this._completeClose(e)}_completeClose(e){if(this._connectionStarted){this._connectionState=f.Disconnected,this._connectionStarted=!1,v.isBrowser&&window.document.removeEventListener("freeze",this._freezeEventListener);try{this._closedCallbacks.forEach(t=>t.apply(this,[e]))}catch(t){this._logger.log(a.Error,`An onclose callback called with error '${e}' threw error '${t}'.`)}}}async _reconnect(e){const t=Date.now();let n=0,r=e!==void 0?e:new Error("Attempting to reconnect due to a unknown error."),s=this._getNextRetryDelay(n++,0,r);if(s===null){this._logger.log(a.Debug,"Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt."),this._completeClose(e);return}if(this._connectionState=f.Reconnecting,e?this._logger.log(a.Information,`Connection reconnecting because of error '${e}'.`):this._logger.log(a.Information,"Connection reconnecting."),this._reconnectingCallbacks.length!==0){try{this._reconnectingCallbacks.forEach(i=>i.apply(this,[e]))}catch(i){this._logger.log(a.Error,`An onreconnecting callback called with error '${e}' threw error '${i}'.`)}if(this._connectionState!==f.Reconnecting){this._logger.log(a.Debug,"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.");return}}for(;s!==null;){if(this._logger.log(a.Information,`Reconnect attempt number ${n} will start in ${s} ms.`),await new Promise(i=>{this._reconnectDelayHandle=setTimeout(i,s)}),this._reconnectDelayHandle=void 0,this._connectionState!==f.Reconnecting){this._logger.log(a.Debug,"Connection left the reconnecting state during reconnect delay. Done reconnecting.");return}try{if(await this._startInternal(),this._connectionState=f.Connected,this._logger.log(a.Information,"HubConnection reconnected successfully."),this._reconnectedCallbacks.length!==0)try{this._reconnectedCallbacks.forEach(i=>i.apply(this,[this.connection.connectionId]))}catch(i){this._logger.log(a.Error,`An onreconnected callback called with connectionId '${this.connection.connectionId}; threw error '${i}'.`)}return}catch(i){if(this._logger.log(a.Information,`Reconnect attempt failed because of error '${i}'.`),this._connectionState!==f.Reconnecting){this._logger.log(a.Debug,`Connection moved to the '${this._connectionState}' from the reconnecting state during reconnect attempt. Done reconnecting.`),this._connectionState===f.Disconnecting&&this._completeClose();return}r=i instanceof Error?i:new Error(i.toString()),s=this._getNextRetryDelay(n++,Date.now()-t,r)}}this._logger.log(a.Information,`Reconnect retries have been exhausted after ${Date.now()-t} ms and ${n} failed attempts. Connection disconnecting.`),this._completeClose()}_getNextRetryDelay(e,t,n){try{return this._reconnectPolicy.nextRetryDelayInMilliseconds({elapsedMilliseconds:t,previousRetryCount:e,retryReason:n})}catch(r){return this._logger.log(a.Error,`IRetryPolicy.nextRetryDelayInMilliseconds(${e}, ${t}) threw error '${r}'.`),null}}_cancelCallbacksWithError(e){const t=this._callbacks;this._callbacks={},Object.keys(t).forEach(n=>{const r=t[n];try{r(null,e)}catch(s){this._logger.log(a.Error,`Stream 'error' callback called with '${e}' threw error: ${Ve(s)}`)}})}_cleanupPingTimer(){this._pingServerHandle&&(clearTimeout(this._pingServerHandle),this._pingServerHandle=void 0)}_cleanupTimeout(){this._timeoutHandle&&clearTimeout(this._timeoutHandle)}_createInvocation(e,t,n,r){if(n)return r.length!==0?{arguments:t,streamIds:r,target:e,type:_.Invocation}:{arguments:t,target:e,type:_.Invocation};{const s=this._invocationId;return this._invocationId++,r.length!==0?{arguments:t,invocationId:s.toString(),streamIds:r,target:e,type:_.Invocation}:{arguments:t,invocationId:s.toString(),target:e,type:_.Invocation}}}_launchStreams(e,t){if(e.length!==0){t||(t=Promise.resolve());for(const n in e)e[n].subscribe({complete:()=>{t=t.then(()=>this._sendWithProtocol(this._createCompletionMessage(n)))},error:r=>{let s;r instanceof Error?s=r.message:r&&r.toString?s=r.toString():s="Unknown error",t=t.then(()=>this._sendWithProtocol(this._createCompletionMessage(n,s)))},next:r=>{t=t.then(()=>this._sendWithProtocol(this._createStreamItemMessage(n,r)))}})}}_replaceStreamingParams(e){const t=[],n=[];for(let r=0;r<e.length;r++){const s=e[r];if(this._isObservable(s)){const i=this._invocationId;this._invocationId++,t[i]=s,n.push(i.toString()),e.splice(r,1)}}return[t,n]}_isObservable(e){return e&&e.subscribe&&typeof e.subscribe=="function"}_createStreamInvocation(e,t,n){const r=this._invocationId;return this._invocationId++,n.length!==0?{arguments:t,invocationId:r.toString(),streamIds:n,target:e,type:_.StreamInvocation}:{arguments:t,invocationId:r.toString(),target:e,type:_.StreamInvocation}}_createCancelInvocation(e){return{invocationId:e,type:_.CancelInvocation}}_createStreamItemMessage(e,t){return{invocationId:e,item:t,type:_.StreamItem}}_createCompletionMessage(e,t,n){return t?{error:t,invocationId:e,type:_.Completion}:{invocationId:e,result:n,type:_.Completion}}}const Kt=[0,2e3,1e4,3e4,null];class Xe{constructor(e){this._retryDelays=e!==void 0?[...e,null]:Kt}nextRetryDelayInMilliseconds(e){return this._retryDelays[e.previousRetryCount]}}class M{}M.Authorization="Authorization";M.Cookie="Cookie";class Yt extends ae{constructor(e,t){super(),this._innerClient=e,this._accessTokenFactory=t}async send(e){let t=!0;this._accessTokenFactory&&(!this._accessToken||e.url&&e.url.indexOf("/negotiate?")>0)&&(t=!1,this._accessToken=await this._accessTokenFactory()),this._setAuthorizationHeader(e);const n=await this._innerClient.send(e);return t&&n.statusCode===401&&this._accessTokenFactory?(this._accessToken=await this._accessTokenFactory(),this._setAuthorizationHeader(e),await this._innerClient.send(e)):n}_setAuthorizationHeader(e){e.headers||(e.headers={}),this._accessToken?e.headers[M.Authorization]=`Bearer ${this._accessToken}`:this._accessTokenFactory&&e.headers[M.Authorization]&&delete e.headers[M.Authorization]}getCookieString(e){return this._innerClient.getCookieString(e)}}var w;(function(o){o[o.None=0]="None",o[o.WebSockets=1]="WebSockets",o[o.ServerSentEvents=2]="ServerSentEvents",o[o.LongPolling=4]="LongPolling"})(w||(w={}));var C;(function(o){o[o.Text=1]="Text",o[o.Binary=2]="Binary"})(C||(C={}));let Gt=class{constructor(){this._isAborted=!1,this.onabort=null}abort(){this._isAborted||(this._isAborted=!0,this.onabort&&this.onabort())}get signal(){return this}get aborted(){return this._isAborted}};class Je{constructor(e,t,n){this._httpClient=e,this._logger=t,this._pollAbort=new Gt,this._options=n,this._running=!1,this.onreceive=null,this.onclose=null}get pollAborted(){return this._pollAbort.aborted}async connect(e,t){if(y.isRequired(e,"url"),y.isRequired(t,"transferFormat"),y.isIn(t,C,"transferFormat"),this._url=e,this._logger.log(a.Trace,"(LongPolling transport) Connecting."),t===C.Binary&&typeof XMLHttpRequest<"u"&&typeof new XMLHttpRequest().responseType!="string")throw new Error("Binary protocols over XmlHttpRequest not implementing advanced features are not supported.");const[n,r]=L(),s={[n]:r,...this._options.headers},i={abortSignal:this._pollAbort.signal,headers:s,timeout:1e5,withCredentials:this._options.withCredentials};t===C.Binary&&(i.responseType="arraybuffer");const l=`${e}&_=${Date.now()}`;this._logger.log(a.Trace,`(LongPolling transport) polling: ${l}.`);const c=await this._httpClient.get(l,i);c.statusCode!==200?(this._logger.log(a.Error,`(LongPolling transport) Unexpected response code: ${c.statusCode}.`),this._closeError=new U(c.statusText||"",c.statusCode),this._running=!1):this._running=!0,this._receiving=this._poll(this._url,i)}async _poll(e,t){try{for(;this._running;)try{const n=`${e}&_=${Date.now()}`;this._logger.log(a.Trace,`(LongPolling transport) polling: ${n}.`);const r=await this._httpClient.get(n,t);r.statusCode===204?(this._logger.log(a.Information,"(LongPolling transport) Poll terminated by server."),this._running=!1):r.statusCode!==200?(this._logger.log(a.Error,`(LongPolling transport) Unexpected response code: ${r.statusCode}.`),this._closeError=new U(r.statusText||"",r.statusCode),this._running=!1):r.content?(this._logger.log(a.Trace,`(LongPolling transport) data received. ${J(r.content,this._options.logMessageContent)}.`),this.onreceive&&this.onreceive(r.content)):this._logger.log(a.Trace,"(LongPolling transport) Poll timed out, reissuing.")}catch(n){this._running?n instanceof Ce?this._logger.log(a.Trace,"(LongPolling transport) Poll timed out, reissuing."):(this._closeError=n,this._running=!1):this._logger.log(a.Trace,`(LongPolling transport) Poll errored after shutdown: ${n.message}`)}}finally{this._logger.log(a.Trace,"(LongPolling transport) Polling complete."),this.pollAborted||this._raiseOnClose()}}async send(e){return this._running?Qe(this._logger,"LongPolling",this._httpClient,this._url,e,this._options):Promise.reject(new Error("Cannot send until the transport is connected"))}async stop(){this._logger.log(a.Trace,"(LongPolling transport) Stopping polling."),this._running=!1,this._pollAbort.abort();try{await this._receiving,this._logger.log(a.Trace,`(LongPolling transport) sending DELETE request to ${this._url}.`);const e={},[t,n]=L();e[t]=n;const r={headers:{...e,...this._options.headers},timeout:this._options.timeout,withCredentials:this._options.withCredentials};await this._httpClient.delete(this._url,r),this._logger.log(a.Trace,"(LongPolling transport) DELETE request sent.")}finally{this._logger.log(a.Trace,"(LongPolling transport) Stop finished."),this._raiseOnClose()}}_raiseOnClose(){if(this.onclose){let e="(LongPolling transport) Firing onclose event.";this._closeError&&(e+=" Error: "+this._closeError),this._logger.log(a.Trace,e),this.onclose(this._closeError)}}}class Qt{constructor(e,t,n,r){this._httpClient=e,this._accessToken=t,this._logger=n,this._options=r,this.onreceive=null,this.onclose=null}async connect(e,t){return y.isRequired(e,"url"),y.isRequired(t,"transferFormat"),y.isIn(t,C,"transferFormat"),this._logger.log(a.Trace,"(SSE transport) Connecting."),this._url=e,this._accessToken&&(e+=(e.indexOf("?")<0?"?":"&")+`access_token=${encodeURIComponent(this._accessToken)}`),new Promise((n,r)=>{let s=!1;if(t!==C.Text){r(new Error("The Server-Sent Events transport only supports the 'Text' transfer format"));return}let i;if(v.isBrowser||v.isWebWorker)i=new this._options.EventSource(e,{withCredentials:this._options.withCredentials});else{const l=this._httpClient.getCookieString(e),c={};c.Cookie=l;const[h,d]=L();c[h]=d,i=new this._options.EventSource(e,{withCredentials:this._options.withCredentials,headers:{...c,...this._options.headers}})}try{i.onmessage=l=>{if(this.onreceive)try{this._logger.log(a.Trace,`(SSE transport) data received. ${J(l.data,this._options.logMessageContent)}.`),this.onreceive(l.data)}catch(c){this._close(c);return}},i.onerror=l=>{s?this._close():r(new Error("EventSource failed to connect. The connection could not be found on the server, either the connection ID is not present on the server, or a proxy is refusing/buffering the connection. If you have multiple servers check that sticky sessions are enabled."))},i.onopen=()=>{this._logger.log(a.Information,`SSE connected to ${this._url}`),this._eventSource=i,s=!0,n()}}catch(l){r(l);return}})}async send(e){return this._eventSource?Qe(this._logger,"SSE",this._httpClient,this._url,e,this._options):Promise.reject(new Error("Cannot send until the transport is connected"))}stop(){return this._close(),Promise.resolve()}_close(e){this._eventSource&&(this._eventSource.close(),this._eventSource=void 0,this.onclose&&this.onclose(e))}}class Zt{constructor(e,t,n,r,s,i){this._logger=n,this._accessTokenFactory=t,this._logMessageContent=r,this._webSocketConstructor=s,this._httpClient=e,this.onreceive=null,this.onclose=null,this._headers=i}async connect(e,t){y.isRequired(e,"url"),y.isRequired(t,"transferFormat"),y.isIn(t,C,"transferFormat"),this._logger.log(a.Trace,"(WebSockets transport) Connecting.");let n;return this._accessTokenFactory&&(n=await this._accessTokenFactory()),new Promise((r,s)=>{e=e.replace(/^http/,"ws");let i;const l=this._httpClient.getCookieString(e);let c=!1;if(v.isNode||v.isReactNative){const h={},[d,g]=L();h[d]=g,n&&(h[M.Authorization]=`Bearer ${n}`),l&&(h[M.Cookie]=l),i=new this._webSocketConstructor(e,void 0,{headers:{...h,...this._headers}})}else n&&(e+=(e.indexOf("?")<0?"?":"&")+`access_token=${encodeURIComponent(n)}`);i||(i=new this._webSocketConstructor(e)),t===C.Binary&&(i.binaryType="arraybuffer"),i.onopen=h=>{this._logger.log(a.Information,`WebSocket connected to ${e}.`),this._webSocket=i,c=!0,r()},i.onerror=h=>{let d=null;typeof ErrorEvent<"u"&&h instanceof ErrorEvent?d=h.error:d="There was an error with the transport",this._logger.log(a.Information,`(WebSockets transport) ${d}.`)},i.onmessage=h=>{if(this._logger.log(a.Trace,`(WebSockets transport) data received. ${J(h.data,this._logMessageContent)}.`),this.onreceive)try{this.onreceive(h.data)}catch(d){this._close(d);return}},i.onclose=h=>{if(c)this._close(h);else{let d=null;typeof ErrorEvent<"u"&&h instanceof ErrorEvent?d=h.error:d="WebSocket failed to connect. The connection could not be found on the server, either the endpoint may not be a SignalR endpoint, the connection ID is not present on the server, or there is a proxy blocking WebSockets. If you have multiple servers check that sticky sessions are enabled.",s(new Error(d))}}})}send(e){return this._webSocket&&this._webSocket.readyState===this._webSocketConstructor.OPEN?(this._logger.log(a.Trace,`(WebSockets transport) sending data. ${J(e,this._logMessageContent)}.`),this._webSocket.send(e),Promise.resolve()):Promise.reject("WebSocket is not in the OPEN state")}stop(){return this._webSocket&&this._close(void 0),Promise.resolve()}_close(e){this._webSocket&&(this._webSocket.onclose=()=>{},this._webSocket.onmessage=()=>{},this._webSocket.onerror=()=>{},this._webSocket.close(),this._webSocket=void 0),this._logger.log(a.Trace,"(WebSockets transport) socket closed."),this.onclose&&(this._isCloseEvent(e)&&(e.wasClean===!1||e.code!==1e3)?this.onclose(new Error(`WebSocket closed with status code: ${e.code} (${e.reason||"no reason given"}).`)):e instanceof Error?this.onclose(e):this.onclose())}_isCloseEvent(e){return e&&typeof e.wasClean=="boolean"&&typeof e.code=="number"}}const Ke=100;class qt{constructor(e,t={}){if(this._stopPromiseResolver=()=>{},this.features={},this._negotiateVersion=1,y.isRequired(e,"url"),this._logger=Ht(t.logger),this.baseUrl=this._resolveUrl(e),t=t||{},t.logMessageContent=t.logMessageContent===void 0?!1:t.logMessageContent,typeof t.withCredentials=="boolean"||t.withCredentials===void 0)t.withCredentials=t.withCredentials===void 0?!0:t.withCredentials;else throw new Error("withCredentials option was not a 'boolean' or 'undefined' value");t.timeout=t.timeout===void 0?100*1e3:t.timeout;let n=null,r=null;if(v.isNode&&typeof require<"u"){const s=typeof __webpack_require__=="function"?__non_webpack_require__:require;n=s("ws"),r=s("eventsource")}!v.isNode&&typeof WebSocket<"u"&&!t.WebSocket?t.WebSocket=WebSocket:v.isNode&&!t.WebSocket&&n&&(t.WebSocket=n),!v.isNode&&typeof EventSource<"u"&&!t.EventSource?t.EventSource=EventSource:v.isNode&&!t.EventSource&&typeof r<"u"&&(t.EventSource=r),this._httpClient=new Yt(t.httpClient||new Ft(this._logger),t.accessTokenFactory),this._connectionState="Disconnected",this._connectionStarted=!1,this._options=t,this.onreceive=null,this.onclose=null}async start(e){if(e=e||C.Binary,y.isIn(e,C,"transferFormat"),this._logger.log(a.Debug,`Starting connection with transfer format '${C[e]}'.`),this._connectionState!=="Disconnected")return Promise.reject(new Error("Cannot start an HttpConnection that is not in the 'Disconnected' state."));if(this._connectionState="Connecting",this._startInternalPromise=this._startInternal(e),await this._startInternalPromise,this._connectionState==="Disconnecting"){const t="Failed to start the HttpConnection before stop() was called.";return this._logger.log(a.Error,t),await this._stopPromise,Promise.reject(new P(t))}else if(this._connectionState!=="Connected"){const t="HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!";return this._logger.log(a.Error,t),Promise.reject(new P(t))}this._connectionStarted=!0}send(e){return this._connectionState!=="Connected"?Promise.reject(new Error("Cannot send data if the connection is not in the 'Connected' State.")):(this._sendQueue||(this._sendQueue=new Ee(this.transport)),this._sendQueue.send(e))}async stop(e){if(this._connectionState==="Disconnected")return this._logger.log(a.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnected state.`),Promise.resolve();if(this._connectionState==="Disconnecting")return this._logger.log(a.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnecting state.`),this._stopPromise;this._connectionState="Disconnecting",this._stopPromise=new Promise(t=>{this._stopPromiseResolver=t}),await this._stopInternal(e),await this._stopPromise}async _stopInternal(e){this._stopError=e;try{await this._startInternalPromise}catch{}if(this.transport){try{await this.transport.stop()}catch(t){this._logger.log(a.Error,`HttpConnection.transport.stop() threw error '${t}'.`),this._stopConnection()}this.transport=void 0}else this._logger.log(a.Debug,"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.")}async _startInternal(e){let t=this.baseUrl;this._accessTokenFactory=this._options.accessTokenFactory,this._httpClient._accessTokenFactory=this._accessTokenFactory;try{if(this._options.skipNegotiation)if(this._options.transport===w.WebSockets)this.transport=this._constructTransport(w.WebSockets),await this._startTransport(t,e);else throw new Error("Negotiation can only be skipped when using the WebSocket transport directly.");else{let n=null,r=0;do{if(n=await this._getNegotiationResponse(t),this._connectionState==="Disconnecting"||this._connectionState==="Disconnected")throw new P("The connection was stopped during negotiation.");if(n.error)throw new Error(n.error);if(n.ProtocolVersion)throw new Error("Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.");if(n.url&&(t=n.url),n.accessToken){const s=n.accessToken;this._accessTokenFactory=()=>s,this._httpClient._accessToken=s,this._httpClient._accessTokenFactory=void 0}r++}while(n.url&&r<Ke);if(r===Ke&&n.url)throw new Error("Negotiate redirection limit exceeded.");await this._createTransport(t,this._options.transport,n,e)}this.transport instanceof Je&&(this.features.inherentKeepAlive=!0),this._connectionState==="Connecting"&&(this._logger.log(a.Debug,"The HttpConnection connected successfully."),this._connectionState="Connected")}catch(n){return this._logger.log(a.Error,"Failed to start the connection: "+n),this._connectionState="Disconnected",this.transport=void 0,this._stopPromiseResolver(),Promise.reject(n)}}async _getNegotiationResponse(e){const t={},[n,r]=L();t[n]=r;const s=this._resolveNegotiateUrl(e);this._logger.log(a.Debug,`Sending negotiation request: ${s}.`);try{const i=await this._httpClient.post(s,{content:"",headers:{...t,...this._options.headers},timeout:this._options.timeout,withCredentials:this._options.withCredentials});if(i.statusCode!==200)return Promise.reject(new Error(`Unexpected status code returned from negotiate '${i.statusCode}'`));const l=JSON.parse(i.content);return(!l.negotiateVersion||l.negotiateVersion<1)&&(l.connectionToken=l.connectionId),l}catch(i){let l="Failed to complete negotiation with the server: "+i;return i instanceof U&&i.statusCode===404&&(l=l+" Either this is not a SignalR endpoint or there is a proxy blocking the connection."),this._logger.log(a.Error,l),Promise.reject(new xt(l))}}_createConnectUrl(e,t){return t?e+(e.indexOf("?")===-1?"?":"&")+`id=${t}`:e}async _createTransport(e,t,n,r){let s=this._createConnectUrl(e,n.connectionToken);if(this._isITransport(t)){this._logger.log(a.Debug,"Connection was provided an instance of ITransport, using that directly."),this.transport=t,await this._startTransport(s,r),this.connectionId=n.connectionId;return}const i=[],l=n.availableTransports||[];let c=n;for(const h of l){const d=this._resolveTransportOrError(h,t,r);if(d instanceof Error)i.push(`${h.transport} failed:`),i.push(d);else if(this._isITransport(d)){if(this.transport=d,!c){try{c=await this._getNegotiationResponse(e)}catch(g){return Promise.reject(g)}s=this._createConnectUrl(e,c.connectionToken)}try{await this._startTransport(s,r),this.connectionId=c.connectionId;return}catch(g){if(this._logger.log(a.Error,`Failed to start the transport '${h.transport}': ${g}`),c=void 0,i.push(new $t(`${h.transport} failed: ${g}`,w[h.transport])),this._connectionState!=="Connecting"){const p="Failed to select transport before stop() was called.";return this._logger.log(a.Debug,p),Promise.reject(new P(p))}}}}return i.length>0?Promise.reject(new Dt(`Unable to connect to the server with any of the available transports. ${i.join(" ")}`,i)):Promise.reject(new Error("None of the transports supported by the client are supported by the server."))}_constructTransport(e){switch(e){case w.WebSockets:if(!this._options.WebSocket)throw new Error("'WebSocket' is not supported in your environment.");return new Zt(this._httpClient,this._accessTokenFactory,this._logger,this._options.logMessageContent,this._options.WebSocket,this._options.headers||{});case w.ServerSentEvents:if(!this._options.EventSource)throw new Error("'EventSource' is not supported in your environment.");return new Qt(this._httpClient,this._httpClient._accessToken,this._logger,this._options);case w.LongPolling:return new Je(this._httpClient,this._logger,this._options);default:throw new Error(`Unknown transport: ${e}.`)}}_startTransport(e,t){return this.transport.onreceive=this.onreceive,this.transport.onclose=n=>this._stopConnection(n),this.transport.connect(e,t)}_resolveTransportOrError(e,t,n){const r=w[e.transport];if(r==null)return this._logger.log(a.Debug,`Skipping transport '${e.transport}' because it is not supported by this client.`),new Error(`Skipping transport '${e.transport}' because it is not supported by this client.`);if(en(t,r))if(e.transferFormats.map(i=>C[i]).indexOf(n)>=0){if(r===w.WebSockets&&!this._options.WebSocket||r===w.ServerSentEvents&&!this._options.EventSource)return this._logger.log(a.Debug,`Skipping transport '${w[r]}' because it is not supported in your environment.'`),new It(`'${w[r]}' is not supported in your environment.`,r);this._logger.log(a.Debug,`Selecting transport '${w[r]}'.`);try{return this._constructTransport(r)}catch(i){return i}}else return this._logger.log(a.Debug,`Skipping transport '${w[r]}' because it does not support the requested transfer format '${C[n]}'.`),new Error(`'${w[r]}' does not support ${C[n]}.`);else return this._logger.log(a.Debug,`Skipping transport '${w[r]}' because it was disabled by the client.`),new Pt(`'${w[r]}' is disabled by the client.`,r)}_isITransport(e){return e&&typeof e=="object"&&"connect"in e}_stopConnection(e){if(this._logger.log(a.Debug,`HttpConnection.stopConnection(${e}) called while in state ${this._connectionState}.`),this.transport=void 0,e=this._stopError||e,this._stopError=void 0,this._connectionState==="Disconnected"){this._logger.log(a.Debug,`Call to HttpConnection.stopConnection(${e}) was ignored because the connection is already in the disconnected state.`);return}if(this._connectionState==="Connecting")throw this._logger.log(a.Warning,`Call to HttpConnection.stopConnection(${e}) was ignored because the connection is still in the connecting state.`),new Error(`HttpConnection.stopConnection(${e}) was called while the connection is still in the connecting state.`);if(this._connectionState==="Disconnecting"&&this._stopPromiseResolver(),e?this._logger.log(a.Error,`Connection disconnected with error '${e}'.`):this._logger.log(a.Information,"Connection disconnected."),this._sendQueue&&(this._sendQueue.stop().catch(t=>{this._logger.log(a.Error,`TransportSendQueue.stop() threw error '${t}'.`)}),this._sendQueue=void 0),this.connectionId=void 0,this._connectionState="Disconnected",this._connectionStarted){this._connectionStarted=!1;try{this.onclose&&this.onclose(e)}catch(t){this._logger.log(a.Error,`HttpConnection.onclose(${e}) threw error '${t}'.`)}}}_resolveUrl(e){if(e.lastIndexOf("https://",0)===0||e.lastIndexOf("http://",0)===0)return e;if(!v.isBrowser)throw new Error(`Cannot resolve '${e}'.`);const t=window.document.createElement("a");return t.href=e,this._logger.log(a.Information,`Normalizing '${e}' to '${t.href}'.`),t.href}_resolveNegotiateUrl(e){const t=e.indexOf("?");let n=e.substring(0,t===-1?e.length:t);return n[n.length-1]!=="/"&&(n+="/"),n+="negotiate",n+=t===-1?"":e.substring(t),n.indexOf("negotiateVersion")===-1&&(n+=t===-1?"?":"&",n+="negotiateVersion="+this._negotiateVersion),n}}function en(o,e){return!o||(e&o)!==0}class Ee{constructor(e){this._transport=e,this._buffer=[],this._executing=!0,this._sendBufferedData=new te,this._transportResult=new te,this._sendLoopPromise=this._sendLoop()}send(e){return this._bufferData(e),this._transportResult||(this._transportResult=new te),this._transportResult.promise}stop(){return this._executing=!1,this._sendBufferedData.resolve(),this._sendLoopPromise}_bufferData(e){if(this._buffer.length&&typeof this._buffer[0]!=typeof e)throw new Error(`Expected data to be of type ${typeof this._buffer} but was of type ${typeof e}`);this._buffer.push(e),this._sendBufferedData.resolve()}async _sendLoop(){for(;;){if(await this._sendBufferedData.promise,!this._executing){this._transportResult&&this._transportResult.reject("Connection stopped.");break}this._sendBufferedData=new te;const e=this._transportResult;this._transportResult=void 0;const t=typeof this._buffer[0]=="string"?this._buffer.join(""):Ee._concatBuffers(this._buffer);this._buffer.length=0;try{await this._transport.send(t),e.resolve()}catch(n){e.reject(n)}}}static _concatBuffers(e){const t=e.map(s=>s.byteLength).reduce((s,i)=>s+i),n=new Uint8Array(t);let r=0;for(const s of e)n.set(new Uint8Array(s),r),r+=s.byteLength;return n.buffer}}class te{constructor(){this.promise=new Promise((e,t)=>[this._resolver,this._rejecter]=[e,t])}resolve(){this._resolver()}reject(e){this._rejecter(e)}}const tn="json";class nn{constructor(){this.name=tn,this.version=1,this.transferFormat=C.Text}parseMessages(e,t){if(typeof e!="string")throw new Error("Invalid input for JSON hub protocol. Expected a string.");if(!e)return[];t===null&&(t=X.instance);const n=E.parse(e),r=[];for(const s of n){const i=JSON.parse(s);if(typeof i.type!="number")throw new Error("Invalid payload.");switch(i.type){case _.Invocation:this._isInvocationMessage(i);break;case _.StreamItem:this._isStreamItemMessage(i);break;case _.Completion:this._isCompletionMessage(i);break;case _.Ping:break;case _.Close:break;default:t.log(a.Information,"Unknown message type '"+i.type+"' ignored.");continue}r.push(i)}return r}writeMessage(e){return E.write(JSON.stringify(e))}_isInvocationMessage(e){this._assertNotEmptyString(e.target,"Invalid payload for Invocation message."),e.invocationId!==void 0&&this._assertNotEmptyString(e.invocationId,"Invalid payload for Invocation message.")}_isStreamItemMessage(e){if(this._assertNotEmptyString(e.invocationId,"Invalid payload for StreamItem message."),e.item===void 0)throw new Error("Invalid payload for StreamItem message.")}_isCompletionMessage(e){if(e.result&&e.error)throw new Error("Invalid payload for Completion message.");!e.result&&e.error&&this._assertNotEmptyString(e.error,"Invalid payload for Completion message."),this._assertNotEmptyString(e.invocationId,"Invalid payload for Completion message.")}_assertNotEmptyString(e,t){if(typeof e!="string"||e==="")throw new Error(t)}}const on={trace:a.Trace,debug:a.Debug,info:a.Information,information:a.Information,warn:a.Warning,warning:a.Warning,error:a.Error,critical:a.Critical,none:a.None};function rn(o){const e=on[o.toLowerCase()];if(typeof e<"u")return e;throw new Error(`Unknown log level: ${o}`)}class sn{configureLogging(e){if(y.isRequired(e,"logging"),an(e))this.logger=e;else if(typeof e=="string"){const t=rn(e);this.logger=new ie(t)}else this.logger=new ie(e);return this}withUrl(e,t){return y.isRequired(e,"url"),y.isNotEmpty(e,"url"),this.url=e,typeof t=="object"?this.httpConnectionOptions={...this.httpConnectionOptions,...t}:this.httpConnectionOptions={...this.httpConnectionOptions,transport:t},this}withHubProtocol(e){return y.isRequired(e,"protocol"),this.protocol=e,this}withAutomaticReconnect(e){if(this.reconnectPolicy)throw new Error("A reconnectPolicy has already been set.");return e?Array.isArray(e)?this.reconnectPolicy=new Xe(e):this.reconnectPolicy=e:this.reconnectPolicy=new Xe,this}build(){const e=this.httpConnectionOptions||{};if(e.logger===void 0&&(e.logger=this.logger),!this.url)throw new Error("The 'HubConnectionBuilder.withUrl' method must be called before building the connection.");const t=new qt(this.url,e);return ke.create(t,this.logger||X.instance,this.protocol||new nn,this.reconnectPolicy)}}function an(o){return o.log!==void 0}const cn=K({name:"Home",components:{Preloader:gt,Hand:Tt},data:()=>({serverUrl:null,playerColor:null,error:null,cards:null,playerHubConnection:null}),methods:{},mounted(){this.serverUrl=this.$route.query.serverUrl,this.playerColor=this.$route.query.playerColor,this.token=this.$route.query.access_token;var o=`${this.serverUrl}/player-hub`;this.playerHubConnection=new sn().withUrl(o,{accessTokenFactory:()=>this.token}).configureLogging(a.Error).withAutomaticReconnect().build(),this.playerHubConnection.on("PlayerHandUpdated",e=>{this.cards=e}),this.playerHubConnection.start().catch(e=>{this.error=e})}}),ln={key:0},hn={key:1},un={key:2};function dn(o,e,t,n,r,s){const i=re("Preloader"),l=re("hand");return x(),N("div",null,[o.error!=null?(x(),N("div",ln,[oe("h2",null,[ct("Could not connect to "),oe("i",null,Be(this.serverUrl),1)]),oe("h3",null,Be(this.error),1)])):o.cards==null?(x(),N("div",hn,[ve(i,{color:"red"})])):(x(),N("div",un,[ve(l,{cards:o.cards,playerHubConnection:o.playerHubConnection},null,8,["cards","playerHubConnection"])]))])}const gn=Se(cn,[["render",dn]]),fn={__name:"InitView",setup(o){return(e,t)=>(x(),N("main",null,[ve(gn)]))}};export{fn as default};
